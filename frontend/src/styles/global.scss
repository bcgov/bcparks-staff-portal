// Bootstrap theme
// https://digitalspace.github.io/bcparks-bootstrap-theme/
@use "@digitalspace/bcparks-bootstrap-theme" as *;

// Design tokens
// https://www2.gov.bc.ca/gov/content/digital/design-system/foundations/design-tokens
@use "@bcgov/design-tokens/css/variables.css" as *;

// Break inside words on when nevessary on top-level headings
h1 {
  overflow-wrap: break-word;
}

// Custom styles
header.page-header {
  padding-block: var(--layout-padding-medium);
  margin-bottom: var(--layout-padding-xlarge);
  border-bottom: 1px solid var(--surface-color-border-default);
}

// Increase bootstrap x-padding for containers to 16px
.container {
  --bs-gutter-x: 2rem;
}

// append search icon appended
// same spacing as the "success" state
.input-with-append {
  position: relative;

  input {
    padding-right: calc(1.5em + 0.75rem);
  }

  select {
    // remove the arrow icon added by bootstrap
    background-image: none;
  }

  .append-content {
    position: absolute;
    right: 0.75rem;
    top: 0.75rem;
    pointer-events: none;
  }
}

// required field label
.append-required {
  &::after {
    content: "*";
    color: var(--typography-color-danger);
  }
}

// override bootstrap theme's text hover color
:root {
  --bs-link-hover-color: var(--surface-color-primary-hover);
  --bs-btn-hover-color: var(--surface-color-primary-hover);
}
a:hover {
  text-decoration: underline;
}

a:hover,
a:not(.btn):focus {
  color: var(--surface-color-primary-hover);
}

// custom bootstrap button style: "text"
.btn-text-primary {
  --bs-btn-color: var(--theme-primary-blue);

  &:hover,
  &:focus {
    text-decoration: underline;
  }

  &:disabled,
  &.disabled {
    border-color: transparent;

    &:hover,
    &:focus {
      text-decoration: none;
    }
  }
}

// custom bootstrap button style: "link"
.text-link {
  color: var(--typography-color-link);

  &:hover,
  &:focus {
    color: var(--bs-link-hover-color);
    text-decoration: underline;
  }
}

// override bootstrap button disabled styles
.btn:disabled {
  // allow pointer events so the cursor can change
  pointer-events: inherit;
  cursor: not-allowed;
  border-color: transparent;

  &:hover,
  &:active {
    border-color: transparent;
  }

  // override background color (not for text style buttons)
  &:not(.btn-text-primary) {
    background-color: var(--surface-color-primary-button-disabled);
    color: var(--typography-color-disabled);
  }
}

// custom bootstrap alert style: "contact" call-to-action
.alert-cta-contact {
  background-color: var(--theme-blue-20);
  color: var(--theme-primary-blue);
  border-color: var(--surface-color-border-active);
}

// override bootstrap theme styles: don't shrink radio/checkbox labels
label.form-check-label {
  font-size: var(--typography-font-size-body) !important;
}

// overrides for the datepicker component package
.react-datepicker {
  // prevent the bootstrap theme from making the month name huge
  h2 {
    font-size: var(--typography-font-size-body) !important;
    display: block !important;
  }
}

// custom style for validation error alert
.alert-validation-error {
  display: flex;
  gap: 0.5em;
  color: var(--typography-color-primary);
  width: fit-content;

  .icon {
    color: var(--icons-color-danger);
  }
}

// custom style for bootstrap dropdowns
.dropdown-toggle {
  // flip the arrow icon when the dropdown is open
  &[aria-expanded="true"]:after {
    transform: rotate(180deg);
  }
}

// styles for header elements with icons
.header-with-icon {
  display: flex;
  align-items: center;
  gap: 0.5em;
}
