// Bootstrap theme
// https://digitalspace.github.io/bcparks-bootstrap-theme/
@use "@digitalspace/bcparks-bootstrap-theme" as *;

// Design tokens
// https://www2.gov.bc.ca/gov/content/digital/design-system/foundations/design-tokens
@use "@bcgov/design-tokens/css/variables.css" as *;

// DatePicker component custom styles
@use "datepicker";
// React-select component custom styles
@use "reactselect";

// Break inside words on when nevessary on top-level headings
h1 {
  overflow-wrap: break-word;
}

// Custom styles
header.page-header {
  padding-block: var(--layout-padding-medium);
  margin-bottom: var(--layout-padding-xlarge);
  border-bottom: 1px solid var(--surface-color-border-default);
}

.page {
  margin-top: var(--layout-margin-medium);
  margin-bottom: var(--layout-margin-huge);
}

// Increase bootstrap x-padding for containers to 16px
.container {
  --bs-gutter-x: 2rem;
}

// append search icon appended
// same spacing as the "success" state
.input-with-append {
  position: relative;

  // make the first child (input) take full width of this container
  & > :first-child {
    width: 100%;
  }

  input {
    padding-right: calc(1.5em + 0.75rem);
  }

  select {
    // remove the arrow icon added by bootstrap
    background-image: none;
  }

  .append-content {
    position: absolute;
    right: 0.75rem;
    top: 0.75rem;
    pointer-events: none;
  }
}

// required field label
.append-required {
  &::after {
    content: "*";
    color: var(--typography-color-danger);
  }
}

// override bootstrap theme's text hover color
:root {
  --bs-link-hover-color: var(--surface-color-primary-hover);
  --bs-btn-hover-color: var(--surface-color-primary-hover);
}
a:hover {
  text-decoration: underline;
}

a:hover,
a:not(.btn):focus {
  color: var(--surface-color-primary-hover);
}

// custom bootstrap button style: "text"
.btn-text {
  &:hover,
  &:focus {
    text-decoration: underline;
  }

  &:disabled,
  &.disabled {
    border-color: transparent;

    &:hover,
    &:focus {
      text-decoration: none;
    }
  }
}

// custom bootstrap button style: "link"
.text-link {
  color: var(--typography-color-link);

  &:hover,
  &:focus {
    color: var(--bs-link-hover-color);
    text-decoration: underline;
  }
}

// custom bootstrap text color: "secondary-grey"
// (The Bootstrap theme's "secondary" color is blue.
// This uses the dark grey color from the design tokens.)
.text-secondary-grey {
  color: var(--typography-color-secondary) !important;
}

// override bootstrap button disabled styles
.btn:disabled,
.btn.disabled {
  // allow pointer events so the cursor can change
  pointer-events: inherit;
  cursor: not-allowed;
  border-color: transparent;

  &:hover,
  &:active {
    border-color: transparent;
  }

  &:not(.btn-text) {
    background-color: var(--surface-color-primary-button-disabled);
    color: var(--typography-color-disabled);
  }

  &.btn-text {
    background-color: transparent;
    color: var(--typography-color-disabled) !important;
  }
}

// custom bootstrap alert style: "contact" call-to-action
.alert-cta-contact {
  background-color: var(--theme-blue-20);
  color: var(--theme-primary-blue);
  border-color: var(--surface-color-border-active);
}

// custom style for validation error alert
.alert-validation-error {
  display: flex;
  gap: 0.5em;
  color: var(--typography-color-primary);

  .icon {
    color: var(--icons-color-danger);
  }
}

// override bootstrap invalid form control styles
.was-validated .form-control:invalid,
.form-control.is-invalid {
  // don't show the circle icon; we'll append a FontAwesomeIcon
  background-image: none;
}

// override bootstrap theme styles: don't shrink radio/checkbox labels
label.form-check-label {
  font-size: var(--typography-font-size-body) !important;
}

// custom style for bootstrap dropdowns
.dropdown-toggle {
  // flip the arrow icon when the dropdown is open
  &[aria-expanded="true"]:after {
    transform: rotate(180deg);
  }
}

// styles for header elements with icons
.header-with-icon {
  display: flex;
  align-items: center;
  gap: 0.5em;

  .feature-icon {
    height: 1.25em;
  }
}

// error messages for validation, etc.
.error-message {
  color: var(--support-border-color-danger);
  font-size: 0.875em;
  display: flex;
  align-items: center;
  gap: 0.5em;
}

// custom switch component with text labels for on/off
.form-switch:has(.label-switch) {
  display: flex;
  align-items: center;

  input.label-switch[role="switch"] {
    height: 1.5em;
    width: 3.5em;
    margin-right: 0.5em;
    position: relative;

    &::after {
      font-size: 0.85em;
      position: absolute;
      top: 1px;
      right: 5px;
      content: "No";
      display: block;
      color: var(--typography-color-primary);
    }

    &:checked::after {
      left: 5px;
      right: auto;
      content: "Yes";
      color: var(--typography-color-primary-invert);
    }
  }
}

// custom table styles
table {
  // override bootstrap table border
  &.has-header-row {
    border: var(--layout-border-width-medium) solid var(--theme-primary-blue);
    thead {
      border-bottom: 2px solid var(--surface-color-border-dark);
    }
    tbody {
      border-bottom: var(--layout-border-width-small) solid
        var(--surface-color-border-default);
    }
  }
}
