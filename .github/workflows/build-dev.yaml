name: Build dev on branch push

on:
  push:
    branches:
      - main

concurrency:
  group: build-dev-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: react-frontend
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Set env
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "REGISTRY_IMAGE=${{ vars.OPENSHIFT_EXTERNAL_REPOSITORY }}/${{ vars.OPENSHIFT_LICENSE_PLATE }}-tools/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

      - name: Login to OpenShift Container Repository
        uses: docker/login-action@v3
        with:
          registry: ${{vars.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{vars.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: npm build
        run: |
          npm install
          npm run build
        working-directory: frontend-legacy

      - name: Docker build
        run: |
          docker build -t ${{ env.IMAGE_NAME }} -f frontend/Dockerfile.prod .
          docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY_IMAGE }}:latest
          docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY_IMAGE }}:${{ env.SHORT_SHA }}

      - name: Push Docker image
        run: docker push --all-tags ${{ env.REGISTRY_IMAGE }}
#  deploy:
#    runs-on: ubuntu-latest
#    needs: [build-cms, build-admin]
#    steps:
#      - name: Git Checkout
#        uses: actions/checkout@v3
#
#      - name: Login OpenShift
#        uses: redhat-actions/oc-login@v1
#        with:
#          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
#          openshift_token: ${{ secrets.OPENSHIFT_SERVICE_TOKEN }}
#
#      - name: Trigger rollout
#        run: |
#          oc -n ${{ secrets.OPENSHIFT_LICENSE_PLATE }}-dev rollout restart deployment ${{ github.ref_name }}-admin
